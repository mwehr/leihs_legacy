jobs:

  meta:

    name: Meta
    description: |
      Various superordinate quality assurance tasks

    run_when:
      always:
        type: branch
        include_match: '^.*$'
        exclude_match: '^.*(no-ci|hotspot).*$'

    context:
      include:
        - cider-ci/shared/main-context.yml

      task_defaults:
        max_trials: 1
        traits:
          Ruby: true

      tasks:
        migration-of-personas-dump:
          include:
            - cider-ci/task-components/database.yml

          environment_variables:
            LEIHS_SECRET: secret
            RAILS_ENV: test

          name: "Check if personas dump needs to be and has been migrated"

          scripts:
            test:
              body: |
                #!/usr/bin/env bash
                set -exu
                export PATH=~/.rubies/$RUBY/bin:$PATH
                export DISABLE_DATABASE_ENVIRONMENT_CHECK=1
                bundle exec rake db:pg:data:restore FILE=./features/personas/personas.pgbin
                if bundle exec rake db:migrate:status | grep -q -E "\s*down\s*\d*\s*"; then
                  echo "run ./bin/migrate-and-dump-personas"
                  exit 1
                else
                  exit 0
                fi

        migration-of-demo-dump:
          include:
            - cider-ci/task-components/database.yml


          environment_variables:
            LEIHS_SECRET: secret
            RAILS_ENV: test

          name: "Check if demo dump needs to be and has been migrated"

          scripts:
            test:
              body: |
                #!/usr/bin/env bash
                set -exu
                export PATH=~/.rubies/$RUBY/bin:$PATH
                export DISABLE_DATABASE_ENVIRONMENT_CHECK=1
                bundle exec rake db:pg:data:restore FILE=./features/personas/demo.pgbin
                if bundle exec rake db:migrate:status | grep -q -E "\s*down\s*\d*\s*"; then
                  echo "run ./bin/migrate-and-dump-demo"
                  exit 1
                else
                  exit 0
                fi

        git-branch-current:
          name: "Git tree contains latest commit from origin/master"
          scripts:
            main:
              body: |
                #!/usr/bin/env bash
                set -exu
                git fetch --all
                #
                # check if your tree still contains the current commit from master
                git rev-list --children HEAD | grep -q "$(git rev-parse origin/master)"

        scenario tasks are up-to-date:
          name: "Scenario tasks are up-to-date"
          scripts:
            main:
              body: |
                #!/usr/bin/env bash
                set -exu
                ./cider-ci/bin/create-scenario-tasks.rb
                test -z "$(git status --porcelain cider-ci/tasks)"

        assets compiled if changed:
          name: "Assets have been precompiled and checked in"
          include: [ cider-ci/task-components/database.yml ]
          environment_variables:
            RAILS_ENV: production
            LEIHS_SECRET: secret
          # traits: [ fastest-executors ]
          scripts:
            test:
              timeout: 10 Minutes
              body: |
                set -eu
                export PATH=./node_modules/.bin:~/.rubies/$RUBY/bin:$PATH

                mv public/assets tmp/checked_in_assets
                bundle exec rake app:i18n:po2json
                bin/recompile-assets

                # attach for easy local debugging:
                mkdir -p tmp/attach && tar czf tmp/attach/assets.tar.gz public/assets

                cider-ci/bin/check-precompiled-assets tmp/checked_in_assets public/assets

                # don't keep the attachment if there was no failure!
                rm tmp/attach/assets.tar.gz

        node_modules are checked in:
          scripts:
            test:
              body: |
                set -eu
                export PATH=./node_modules/.bin:~/.rubies/$RUBY/bin:$PATH
                yarn check --integrity --verify-tree --offline

        backend and frontend locales are synchronised:
          name: "Backend and frontend locales are synchronised"
          scripts:
            test:
              body:
                read_and_replace_with: cider-ci/bin/check-locales-are-synchronised

        extract missing and fuzzy translations:
          name: "Extract missing and fuzzy translations"
          tree_attachments:
            translation-todos:
              include_match: tmp\/translation-todos\/.*\.po$
              content_type: text/plain
          scripts:
            test:
              body:
                read_and_replace_with: bin/translation-todos
